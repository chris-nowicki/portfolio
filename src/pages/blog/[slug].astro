---
import { getCollection, render } from 'astro:content'
import PageLayout from '@/layouts/PageLayout.astro'
import Container from '@/components/Container.astro'
import { formatDate } from '@/utils/formatDate'
import { readingTime } from '@/utils/readingTime'

export async function getStaticPaths() {
  const posts = await getCollection('blog')
  return posts.map((post) => ({ params: { slug: post.id }, props: { post } }))
}

const { post } = Astro.props
const { Content } = await render(post)

const postDate = formatDate(post.data.date.toDateString())
const postReadTime = readingTime(post.rendered?.html ?? '')
---

<PageLayout title={post.data.title} description={post.data.description}>
  <Container>
    <section class="px-2 pt-28 text-sm sm:pt-40 sm:text-base">
      <article class="px-2">
        <header class="flex flex-col gap-2">
          <h1 class="text-xl font-bold sm:text-2xl">{post.data.title}</h1>
          <span class="flex items-center gap-2 text-sm text-muted-foreground"
            >{postDate} | {postReadTime}</span
          >
        </header>
        <Content />
      </article>
    </section>
  </Container>
</PageLayout>

<style is:global>
  h1 {
    @apply scroll-m-20 text-4xl font-extrabold tracking-tight md:text-5xl;
  }

  h2 {
    @apply scroll-m-20 border-b pb-2 text-3xl font-semibold tracking-tight first:mt-0;
  }

  h3 {
    @apply scroll-m-20 text-2xl font-semibold tracking-tight;
  }

  h4 {
    @apply scroll-m-20 text-xl font-semibold tracking-tight;
  }

  p {
    @apply mb-6 mt-0 leading-7;
  }

  ul {
    @apply my-6 ml-6 list-disc marker:text-blue-600 [&>li]:mt-2;
  }

  ol {
    @apply my-6 ml-6 list-decimal marker:text-blue-600 [&>li]:mt-2;
  }

  p {
    @apply mb-6 leading-7 [&:not(:first-child)]:mt-6;
  }

  blockquote {
    @apply mt-6 border-l-2 border-blue-600 pl-6 italic;
  }

  pre {
    @apply overflow-auto rounded-md p-2;
  }

  code {
    @apply my-1 border-0 text-sm !leading-normal md:text-sm;
  }

  .subheading-anchor {
    @apply relative text-foreground no-underline;
  }

  .subheading-anchor::before {
    content: ''; /* Initial state has no content. */
    position: absolute;
    left: -30px; /* Adjust as needed to place the hashtag to the left. */
    top: 0; /* Align with the top of the anchor. */
    opacity: 0; /* Make it invisible initially. */
    transition: opacity 0.2s; /* Smooth transition for the hover effect. */
  }

  .subheading-anchor:hover::before {
    content: '#'; /* The content to show on hover. */
    opacity: 1; /* Make the hashtag visible on hover. */
    @apply text-muted-foreground/40;
  }
</style>
